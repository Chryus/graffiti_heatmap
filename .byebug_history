exit
c
n
c
self.graffiti
self
n
s
c
graffito
c
n
c
self.upvotes.create(graffiti_id: Graffiti.first)
user.upvotes.create(graffiti_id: Graffiti.first)
self.graffiti
self
graffiti.upvotes
graffiti
exit
c
n
s
exit
c
n
s
c
super
self
super
self
json
exit
exot
c
reload!
graffito.upvotes.size
graffito.upvotes.count
graffito.upvotes
c
user.graffitoc
Like
UsersGraffiti
GraffitiUsers
GraffitiUser
UserGraffiti
UsersGraffiti.all
GraffitiUsers.all
GraffitiUser
GraffitiUsers
graffito.likes.create
graffito.likes
graffito.likes.create(user: User.find(params[:user_id]))
graffito.likes.create(user: User.find(params[:user_id])
graffito.likes.create(user: params[:user_id])
graffito.likes
graffito.likes.create(user_id: params[:user_id])
c
f
d
f
params[:params][:user_id]
params[:params]
params[:params
params[:params}
params
params["user_id"]
params["user_id"].present?
params
params[:user_id].present?
params[;user_id].present?
c
params[;user_id].present?
params
c
params
c
params
c
params
c
request
params
c
params
c
exit
c
incident["x_coordinatedd"]
incident["x_coordinate"]
c
Graffiti.all(select: "latitude, longitude, COUNT(*) as count", :group => "latitude, longitude")
Graffiti(select: "latitude, longitude, COUNT(*) as count", :group => "latitude, longitude")
Graffiti.all(select: "latitude, longitude, COUNT(*) as count", :group => "latitude, longitude")
self.by_location
exit
c
n
exit
reload!
exit
self.destroy_all
self.all
self.all.destroy
