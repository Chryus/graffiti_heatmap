devise.provider("Auth",function(){function n(n,t,e){var u={method:s[n].toLowerCase(),url:r[n]};return t&&(o?(u.data={},u.data[o]=t):u.data=t),angular.extend(u,e),u}function t(n,t){angular.forEach(n,function(e,r){this[r+t]=function(t){return void 0===t?n[r]:(n[r]=t,this)}},this)}function e(n){return function(){return n}}var r={login:"/users/sign_in.json",logout:"/users/sign_out.json",register:"/users.json",sendResetPasswordInstructions:"/users/password.json",resetPassword:"/users/password.json"},s={login:"POST",logout:"DELETE",register:"POST",sendResetPasswordInstructions:"POST",resetPassword:"PUT"},u="",o="user",i=function(n){return n.data};t.call(this,s,"Method"),t.call(this,r,"Path"),this.baseUrl=function(n){return void 0===n?u:(u=n,this)},this.resourceName=function(n){return void 0===n?o:(o=n,this)},this.parse=function(n){return"function"!=typeof n?i:(i=n,this)},this.$get=function(t,r,s){function u(n){return a._currentUser=n,n}function o(){u(null),a._promise=null}function c(n){return function(t){return s.$broadcast("devise:"+n,t),t}}var a={_currentUser:null,parse:i,_promise:null,reset:function(){o(),a.currentUser()},login:function(t,e){var s=arguments.length>0,o=a.isAuthenticated();return t=t||{},r(n("login",t,e)).then(a.parse).then(u).then(function(n){return s&&!o?c("new-session")(n):n}).then(c("login"))},logout:function(t){var s=e(a._currentUser);return r(n("logout",void 0,t)).then(o).then(s).then(c("logout"))},register:function(t,e){return t=t||{},r(n("register",t,e)).then(a.parse).then(u).then(c("new-registration"))},sendResetPasswordInstructions:function(t){return t=t||{},r(n("sendResetPasswordInstructions",t)).then(a.parse).then(c("send-reset-password-instructions-successfully"))},resetPassword:function(t){return t=t||{},r(n("resetPassword",t)).then(a.parse).then(u).then(c("reset-password-successfully"))},currentUser:function(){return a.isAuthenticated()?t.when(a._currentUser):(null===a._promise&&(a._promise=a.login()),a._promise)},isAuthenticated:function(){return!!a._currentUser}};return a}});